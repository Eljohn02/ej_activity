user nginx;
worker_processes 1;

error_log       /var/log/nginx/error.log debug;
pid             /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log          /var/log/nginx/access.log main;
    keepalive_timeout   60;

    # Accenture NGINX security standard
    # Remove server disclosure details
    server_tokens off; 

    server {
        listen          80;
        server_name     "localhost";

        # HTTP Strict Transport Security
        ## Prevents side jacking, and cookie hijacking attacks.
        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';

        # Content Security Policy (CSP)
        add_header Content-Security-Policy "default-src 'self' 'unsafe-eval' 'unsafe-inline' *.accenture.com; script-src 'self' 'unsafe-inline' 'unsafe-eval';img-src 'self' *.accenture.com data:; connect-src 'self' *.accenture.com; upgrade-insecure-requests; block-all-mixed-content";

        # X-XSS protection (Cross site scripting) Policy
        add_header X-XSS-Protection "1; mode=block";

        # X-Frame-Options for clickjacking defence
        add_header X-Frame-Options "SAMEORIGIN";

        # X-Content-Type-Options
        ## Browser sniffing protection
        add_header X-Content-Type-Options nosniff;

        # Referer Policy
        ## Denies web browsers to inform the destination site of any URL information
        add_header Referrer-Policy "strict-origin";

        # Cache-Control
        add_header Cache-Control "max-age=31536000; no-store";


        location / {
            root        /usr/share/nginx/html;
            index       index.html index.htm;
            try_files   $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass      http://backend:8080/api;
        }

        error_page      500 502 503 504 /50x.html;

    }
}